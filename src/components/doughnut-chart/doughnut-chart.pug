include ../../helpers/decline-js

mixin doughnut-chart(obj)

  -
    const cases = ["голос", "голоса", "голосов"];
    const circumference  = 364.2;
    const votes = obj.great + obj.good + obj.satisfactory + obj.poorly;
    const unitSize = circumference / votes;

     const poorly = obj.poorly * unitSize;
     const satisfactory = obj.satisfactory * unitSize;
     const good = obj.good * unitSize;
     const great = obj.great * unitSize;

     function getDashedLine(length) {
        if(length >= 3) return length - 2;
        else if(length > 0) return 1;
        else return 0;
     }


  .doughnut-chart
    figure.doughnut-chart__chart
      <svg width="120" height="120" xmlns="http://www.w3.org/2000/svg">
        <defs>
          <linearGradient id="poorly">
            <stop offset="0%" stop-color="#3D4975" />
            <stop offset="100%" stop-color="#919191" />
          </linearGradient>
          <linearGradient id="satisfactory">
            <stop offset="0%" stop-color="#8BA4F9" />
            <stop offset="100%" stop-color="#BC9CFF" />
          </linearGradient>
          <linearGradient id="good">
            <stop offset="0%" stop-color="#66D2EA" />
            <stop offset="100%" stop-color="#6FCF97" />
          </linearGradient>
          <linearGradient id="great">
            <stop offset="0%" stop-color="#FFBA9C" />
            <stop offset="100%" stop-color="#FFE39C" />
          </linearGradient>
        </defs>

        <circle r="58" cx="60" cy="60"  transform="rotate(-90 60 60)" stroke-dasharray = "#{getDashedLine(poorly)} #{circumference}" stroke-width="4" stroke="url(#poorly)" fill="none">
          <title>#{decline(obj.poorly, cases)}</title>
        </circle>
        <circle r="58" cx="60" cy="60" transform="rotate(-90 60 60)"  stroke-dasharray = "#{getDashedLine(satisfactory)} #{circumference}" stroke-dashoffset = "-#{poorly}" stroke-width="4" stroke="url(#satisfactory)" fill="none">
          <title>#{decline(obj.satisfactory, cases)}</title>
        </circle>
        <circle r="58" cx="60" cy="60" transform="rotate(-90 60 60)" stroke-dasharray = "#{getDashedLine(good)} #{circumference}" stroke-dashoffset = "-#{satisfactory + poorly}"  stroke-width="4" stroke="url(#good)" fill="none">
          <title>#{decline(obj.good, cases)}</title>
        </circle>
        <circle r="58" cx="60" cy="60" transform="rotate(-90 60 60)"  stroke-dasharray = "#{getDashedLine(great)} #{circumference}" stroke-dashoffset = "-#{good + satisfactory + poorly}" stroke-width="4" stroke="url(#great)" fill="none">
          <title>#{decline(obj.great, cases)}</title>
        </circle>
        <text class="doughnut-chart__votes-count" x="50%" y="49%" text-anchor="middle" font-family="Montserrat-Bold, sans-serif" font-size="24" fill = "#BC9CFF">#{votes}</text>
        <text class="doughnut-chart__votes-span" x="50%" y="64%" text-anchor="middle" font-family="Montserrat-Bold, sans-serif" font-size="15"  fill = "#BC9CFF">#{decline(votes, cases, false)}</text>
      </svg>
      figcaption.doughnut-chart__caption
        dl.doughnut-chart__legend
          .doughnut-chart__item-wrapper
            dt.doughnut-chart__color.doughnut-chart__color_yellow
            dd.doughnut-chart__definition Великолепно
              span.doughnut-chart__color-label - #{decline(obj.great, cases)}
          .doughnut-chart__item-wrapper
            dt.doughnut-chart__color.doughnut-chart__color_green
            dd.doughnut-chart__definition Хорошо
              span.doughnut-chart__color-label - #{decline(obj.good, cases)}
          .doughnut-chart__item-wrapper
            dt.doughnut-chart__color.doughnut-chart__color_violet
            dd.doughnut-chart__definition Удовлетворительно
              span.doughnut-chart__color-label - #{decline(obj.satisfactory, cases)}
          .doughnut-chart__item-wrapper
            dt.doughnut-chart__color.doughnut-chart__color_black
            dd.doughnut-chart__definition Разочарован
              span.doughnut-chart__color-label - #{decline(obj.poorly, cases)}
